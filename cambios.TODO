
 ✔ Complemento de pago @done (18-10-06 13:51)
    CREATE TABLE public.clientes_cuentas
        (
          id_cuenta character varying(25) NOT NULL,
          id_cliente character varying(25) NOT NULL,
          aleas character varying(120),
          banco_rfc character varying(15),
          cuenta character varying(20),
          CONSTRAINT clientes_cuentas_pkey PRIMARY KEY (id_cuenta),
          CONSTRAINT clientes_cuentas_id_cliente_fkey FOREIGN KEY (id_cliente)
              REFERENCES public.clientes (id_cliente) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE ); ALTER TABLE public.clientes_cuentas OWNER TO programa;
    INSERT INTO public.privilegios(id_privilegio, nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('1l4fba64a9b6bd36.19107194', 'Complementos de pago','l4fba64a9b6bd36.19107194',TRUE,'facturacion/lista_cp/','facturacion.png',FALSE);
    INSERT INTO public.privilegios(id_privilegio, nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('2l4fba64a9b6bd36.19107194', 'Agregar','l5bb7b7834f8a40.34557076',TRUE,'facturacion/agregar_cp/','add.png',FALSE);
    ALTER TABLE public.facturacion_series_folios ADD COLUMN tipo character varying(10) NOT NULL DEFAULT 'f'::character varying;
    COMMENT ON COLUMN public.facturacion_series_folios.tipo IS 'f: factura, cp: complemento de pago';
    CREATE TABLE public.facturacion_compago
    (
      id_compago character varying(25) NOT NULL,
      id_factura character varying(25) NOT NULL,
      abono double precision NOT NULL DEFAULT 0,
      CONSTRAINT facturacion_compago_pkey PRIMARY KEY (id_compago, id_factura),
      CONSTRAINT facturacion_compago_id_compago_fkey FOREIGN KEY (id_compago)
          REFERENCES public.facturacion (id_factura) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT facturacion_compago_id_factura_fkey FOREIGN KEY (id_factura)
          REFERENCES public.facturacion (id_factura) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE ); ALTER TABLE public.facturacion_compago OWNER TO programa;
    CREATE OR REPLACE VIEW public.get_facturas_cp AS
     SELECT f.id_factura,
        f.id_cliente,
        c.nombre_fiscal AS cliente,
        f.uuid,
        f.serie,
        f.folio,
        f.total,
        count(fc.id_compago) + 1 AS parcialidad,
        COALESCE(sum(fc.abono), 0::double precision) AS pagos,
        f.total - COALESCE(sum(fc.abono), 0::double precision) AS saldo
       FROM facturacion f
         JOIN clientes c ON c.id_cliente::text = f.id_cliente::text
         LEFT JOIN facturacion_compago fc ON f.id_factura::text = fc.id_factura::text
      WHERE f.status::text <> 'ca'::text AND f.uuid IS NOT NULL AND f.tipo_comprobante::text = 'ingreso'::text
      GROUP BY f.id_factura, c.id_cliente
     HAVING (f.total - COALESCE(sum(fc.abono), 0::double precision)) > 0::double precision
      ORDER BY f.folio DESC;
    ALTER TABLE public.get_facturas_cp OWNER TO programa;
    COMMENT ON VIEW public.get_facturas_cp IS 'facturas de para complemento de pago';

  ✔ cfdi 3.3 @done (18-06-15 16:31)
    Crear el schema otros y cargar el archivo catalogos33
    UPDATE public.empresas SET cfdi_version='3.3';
    ALTER TABLE public.facturacion ADD COLUMN cfdi_ext json;
    ALTER TABLE public.facturacion ALTER COLUMN sello TYPE character varying(400);


Remplazar los archivos modificados, los que estan abiertos
Ejecutar http://localhost/nevarez/panel/facturacion/parchefac para las facturas 1 y 2
Cambiar en facturacion/parchefac a regeneraFacturas2() y en facturacion_model identificar el rango de folios y los dias en facturacion
Ejecutar de new http://localhost/nevarez/panel/facturacion/parchefac para las facturas 3